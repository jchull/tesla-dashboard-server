import {Document, model, Schema} from 'mongoose';
import {IDriveSession} from './DriveSession';

export interface IDriveState extends Document {
  id_s: string,
  gps_as_of: number,
  heading: number,
  latitude: number,
  longitude: number,
  power: number,
  shift_state: string,
  speed: number,
  odometer: number,
  timestamp: number,
  battery_heater: boolean,
  battery_level: number,
  est_battery_range: number,
  ideal_battery_range: number,
  usable_battery_level: number,
  driver_temp_setting: number,
  fan_status: number,
  inside_temp: number,
  is_auto_conditioning_on: boolean,
  is_climate_on: boolean,
  is_front_defroster_on: boolean,
  is_preconditioning: boolean,
  is_rear_defroster_on: boolean,
  outside_temp: number,
  passenger_temp_setting: number,
  seat_heater_left: number,
  seat_heater_rear_center: number,
  seat_heater_rear_left: number,
  seat_heater_rear_right: number,
  seat_heater_right: number,
  side_mirror_heaters: boolean,
  smart_preconditioning: boolean,
  wiper_blade_heater: boolean,

  driveSession?: IDriveSession
}

const DriveStateSchema: Schema = new Schema({
  id_s: {type: String, required: true},
  gps_as_of: {type: Number},
  heading: {type: Number},
  latitude: {type: Number},
  longitude: {type: Number},
  power: {type: Number},
  shift_state: {type: String},
  speed: {type: Number},
  odometer: {type: Number},
  timestamp: {type: Number},
  battery_heater: {type: Boolean},
  battery_level: {type: Number},
  est_battery_range: {type: Number},
  ideal_battery_range: {type: Number},
  usable_battery_level: {type: Number},
  driver_temp_setting: {type: Number},
  fan_status: {type: Number},
  inside_temp: {type: Number},
  is_auto_conditioning_on: {type: Boolean},
  is_climate_on: {type: Boolean},
  is_front_defroster_on: {type: Boolean},
  is_preconditioning: {type: Boolean},
  is_rear_defroster_on: {type: Boolean},
  outside_temp: {type: Number},
  passenger_temp_setting: {type: Number},
  seat_heater_left: {type: Number},
  seat_heater_rear_center: {type: Number},
  seat_heater_rear_left: {type: Number},
  seat_heater_rear_right: {type: Number},
  seat_heater_right: {type: Number},
  side_mirror_heaters: {type: Boolean},
  smart_preconditioning: {type: Boolean},
  wiper_blade_heater: {type: Boolean},

  driveSession: {type: Schema.Types.ObjectId, ref: 'DriveSession'}
});

export default model('DriveState', DriveStateSchema);

