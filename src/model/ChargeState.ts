import {Document, model, Schema} from 'mongoose';

export interface IChargeState extends Document {
  id_s: string,
  battery_heater_on: boolean,
  battery_level: number,
  battery_range: number,
  charge_current_request: number,
  charge_current_request_max: number,
  charge_enable_request: boolean,
  charge_energy_added: number,
  charge_limit_soc: number,
  charge_limit_soc_max: number,
  charge_limit_soc_min: number,
  charge_limit_soc_std: number,
  charge_miles_added_ideal: number,
  charge_miles_added_rated: number,
  charge_port_cold_weather_mode: boolean,
  charge_port_door_open: boolean,
  charge_port_latch: string,
  charge_rate: number,
  charge_to_max_range: boolean,
  charger_actual_current: number,
  // charger_phases: null,
  charger_pilot_current: number,
  charger_power: number,
  charger_voltage: number,
  charging_state: string,
  conn_charge_cable: string,
  est_battery_range: number,
  fast_charger_brand: string,
  fast_charger_present: boolean,
  fast_charger_type: string,
  ideal_battery_range: number,
  managed_charging_active: boolean,
  // managed_charging_start_time: null,
  managed_charging_user_canceled: boolean,
  max_range_charge_counter: number,
  // not_enough_power_to_heat: null,
  scheduled_charging_pending: boolean,
  // scheduled_charging_start_time: null,
  time_to_full_charge: number,
  timestamp: number,
  trip_charging: boolean,
  usable_battery_level: number
  // user_charge_enable_request: null
}


const ChargeStateSchema: Schema = new Schema({
  id_s: {type: String, required: true},
  battery_heater_on: {type: Boolean},
  battery_level: {type: Number},
  battery_range: {type: Number},
  charge_current_request: {type: Number},
  charge_current_request_max: {type: Number},
  charge_enable_request: {type: Boolean},
  charge_energy_added: {type: Number},
  charge_limit_soc: {type: Number},
  charge_limit_soc_max: {type: Number},
  charge_limit_soc_min: {type: Number},
  charge_limit_soc_std: {type: Number},
  charge_miles_added_ideal: {type: Number},
  charge_miles_added_rated: {type: Number},
  charge_port_cold_weather_mode: {type: Boolean},
  charge_port_door_open: {type: Boolean},
  charge_port_latch: {type: String},
  charge_rate: {type: Number},
  charge_to_max_range: {type: Boolean},
  charger_actual_current: {type: Number},
// charger_phases: {type: null},
  charger_pilot_current: {type: Number},
  charger_power: {type: Number},
  charger_voltage: {type: Number},
  charging_state: {type: String},
  conn_charge_cable: {type: String},
  est_battery_range: {type: Number},
  fast_charger_brand: {type: String},
  fast_charger_present: {type: Boolean},
  fast_charger_type: {type: String},
  ideal_battery_range: {type: Number},
  managed_charging_active: {type: Boolean},
// managed_charging_start_time: {type: null},
  managed_charging_user_canceled: {type: Boolean},
  max_range_charge_counter: {type: Number},
// not_enough_power_to_heat: {type: null},
  scheduled_charging_pending: {type: Boolean},
// scheduled_charging_start_time: {type: null},
  time_to_full_charge: {type: Number},
  timestamp: {type: Number},
  trip_charging: {type: Boolean},
  usable_battery_level: {type: Number}

});

export default model('ChargeState', ChargeStateSchema);

