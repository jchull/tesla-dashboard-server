import {Document, model, Schema} from 'mongoose';
import {IChargeSession} from './ChargeSession';

export interface IChargeState extends Document {
  id_s: string,
  vehicle_id: number,
  battery_heater_on: boolean,
  battery_level: number,
  battery_range: number,
  charge_current_request: number,
  charge_energy_added: number,
  charge_miles_added_ideal: number,
  charge_miles_added_rated: number,
  charge_port_door_open: boolean,
  charge_port_latch: string,
  charge_rate: number,
  charger_actual_current: number,
  charger_power: number,
  charger_voltage: number,
  charging_state: string,
  est_battery_range: number,
  ideal_battery_range: number,
  time_to_full_charge: number,
  timestamp: number,
  driver_temp_setting: number,
  fan_status: number,
  inside_temp: number,
  is_auto_conditioning_on: boolean,
  is_climate_on: boolean,
  is_front_defroster_on: boolean,
  is_preconditioning: boolean,
  is_rear_defroster_on: boolean,
  outside_temp: number,
  passenger_temp_setting: number,
  seat_heater_left: number,
  seat_heater_rear_center: number,
  seat_heater_rear_left: number,
  seat_heater_rear_right: number,
  seat_heater_right: number,
  side_mirror_heaters: boolean,
  smart_preconditioning: boolean,
  is_user_present: boolean,

  chargeSession?: IChargeSession
}


const ChargeStateSchema: Schema = new Schema({
  id_s: {type: String, required: true},
  vehicle_id: {type: Number},
  battery_heater_on: {type: Boolean},
  battery_level: {type: Number},
  battery_range: {type: Number},
  charge_current_request: {type: Number},
  charge_energy_added: {type: Number},
  charge_miles_added_ideal: {type: Number},
  charge_miles_added_rated: {type: Number},
  charge_port_door_open: {type: Boolean},
  charge_port_latch: {type: String},
  charge_rate: {type: Number},
  charger_actual_current: {type: Number},
  charger_power: {type: Number},
  charger_voltage: {type: Number},
  charging_state: {type: String},
  est_battery_range: {type: Number},
  ideal_battery_range: {type: Number},
  time_to_full_charge: {type: Number},
  timestamp: {type: Number},
  driver_temp_setting: {type: Number},
  fan_status: {type: Number},
  inside_temp: {type: Number},
  is_auto_conditioning_on: {type: Boolean},
  is_climate_on: {type: Boolean},
  is_front_defroster_on: {type: Boolean},
  is_preconditioning: {type: Boolean},
  is_rear_defroster_on: {type: Boolean},
  outside_temp: {type: Number},
  passenger_temp_setting: {type: Number},
  seat_heater_left: {type: Number},
  seat_heater_rear_center: {type: Number},
  seat_heater_rear_left: {type: Number},
  seat_heater_rear_right: {type: Number},
  seat_heater_right: {type: Number},
  side_mirror_heaters: {type: Boolean},
  smart_preconditioning: {type: Boolean},
  is_user_present: {type: Boolean},

  chargeSession: {type: Schema.Types.ObjectId, ref: 'ChargeSession'}

});

export default model('ChargeState', ChargeStateSchema);

